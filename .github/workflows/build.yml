name: Build and Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test-typescript:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 22, 23]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: ./ts
        run: npm install
      - name: Build
        working-directory: ./ts
        run: npm run build
      - name: Run tests
        working-directory: ./ts
        run: npm test

  test-javascript:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20, 22, 23]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: ./js
        run: npm install
      - name: Run tests
        working-directory: ./js
        run: npm test

  test-python:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # Not needed
      # - name: Install dependencies
      #   working-directory: ./py
      #   run: pip install -e .
      - name: Run tests
        working-directory: ./py
        run: python -m unittest discover -s tests

  test-go:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.20', '1.21', '1.22', '1.23', '1.24']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run tests
        working-directory: ./go
        run: go test -v ./...

  test-ruby:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Install dependencies
        working-directory: ./rb
        run: |
          gem install bundler
          bundle install
      - name: Run tests
        working-directory: ./rb
        run: ruby test_voxgig_struct.rb

  test-php:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Install dependencies
        working-directory: ./php
        run: composer install
      - name: Run tests
        working-directory: ./php
        run: vendor/bin/phpunit

  test-lua:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"
      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4
      - name: Setup environment
        working-directory: ./lua
        shell: bash
        run: |
          chmod +x setup.sh
          ./setup.sh
      - name: Run tests
        working-directory: ./lua
        run: make test